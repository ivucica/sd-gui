/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Request } from './Request';
import {
    RequestFromJSON,
    RequestFromJSONTyped,
    RequestToJSON,
    RequestToJSONTyped,
} from './Request';

/**
 * 
 * @export
 * @interface PredictBody
 */
export interface PredictBody {
    /**
     * 
     * @type {string}
     * @memberof PredictBody
     */
    sessionHash?: string;
    /**
     * 
     * @type {string}
     * @memberof PredictBody
     */
    eventId?: string;
    /**
     * 
     * @type {Array<any>}
     * @memberof PredictBody
     */
    data: Array<any>;
    /**
     * 
     * @type {any}
     * @memberof PredictBody
     */
    eventData?: any | null;
    /**
     * 
     * @type {number}
     * @memberof PredictBody
     */
    fnIndex?: number;
    /**
     * 
     * @type {boolean}
     * @memberof PredictBody
     */
    batched?: boolean;
    /**
     * 
     * @type {Request}
     * @memberof PredictBody
     */
    request?: Request;
}

/**
 * Check if a given object implements the PredictBody interface.
 */
export function instanceOfPredictBody(value: object): value is PredictBody {
    if (!('data' in value) || value['data'] === undefined) return false;
    return true;
}

export function PredictBodyFromJSON(json: any): PredictBody {
    return PredictBodyFromJSONTyped(json, false);
}

export function PredictBodyFromJSONTyped(json: any, ignoreDiscriminator: boolean): PredictBody {
    if (json == null) {
        return json;
    }
    return {
        
        'sessionHash': json['session_hash'] == null ? undefined : json['session_hash'],
        'eventId': json['event_id'] == null ? undefined : json['event_id'],
        'data': json['data'],
        'eventData': json['event_data'] == null ? undefined : json['event_data'],
        'fnIndex': json['fn_index'] == null ? undefined : json['fn_index'],
        'batched': json['batched'] == null ? undefined : json['batched'],
        'request': json['request'] == null ? undefined : RequestFromJSON(json['request']),
    };
}

export function PredictBodyToJSON(json: any): PredictBody {
    return PredictBodyToJSONTyped(json, false);
}

export function PredictBodyToJSONTyped(value?: PredictBody | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'session_hash': value['sessionHash'],
        'event_id': value['eventId'],
        'data': value['data'],
        'event_data': value['eventData'],
        'fn_index': value['fnIndex'],
        'batched': value['batched'],
        'request': RequestToJSON(value['request']),
    };
}

