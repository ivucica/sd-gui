/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Options
 */
export interface Options {
    /**
     * Always save all generated images
     * @type {boolean}
     * @memberof Options
     */
    samplesSave?: boolean;
    /**
     * File format for images
     * @type {string}
     * @memberof Options
     */
    samplesFormat?: string;
    /**
     * Images filename pattern
     * @type {any}
     * @memberof Options
     */
    samplesFilenamePattern?: any | null;
    /**
     * Add number to filename when saving
     * @type {boolean}
     * @memberof Options
     */
    saveImagesAddNumber?: boolean;
    /**
     * Saving the image to an existing file
     * @type {string}
     * @memberof Options
     */
    saveImagesReplaceAction?: string;
    /**
     * Always save all generated image grids
     * @type {boolean}
     * @memberof Options
     */
    gridSave?: boolean;
    /**
     * File format for grids
     * @type {string}
     * @memberof Options
     */
    gridFormat?: string;
    /**
     * Add extended info (seed, prompt) to filename when saving grid
     * @type {any}
     * @memberof Options
     */
    gridExtendedFilename?: any | null;
    /**
     * Do not save grids consisting of one picture
     * @type {boolean}
     * @memberof Options
     */
    gridOnlyIfMultiple?: boolean;
    /**
     * Prevent empty spots in grid (when set to autodetect)
     * @type {any}
     * @memberof Options
     */
    gridPreventEmptySpots?: any | null;
    /**
     * Archive filename pattern
     * @type {any}
     * @memberof Options
     */
    gridZipFilenamePattern?: any | null;
    /**
     * Grid row count; use -1 for autodetect and 0 for it to be same as batch size
     * @type {number}
     * @memberof Options
     */
    nRows?: number;
    /**
     * Font for image grids that have text
     * @type {any}
     * @memberof Options
     */
    font?: any | null;
    /**
     * Text color for image grids
     * @type {string}
     * @memberof Options
     */
    gridTextActiveColor?: string;
    /**
     * Inactive text color for image grids
     * @type {string}
     * @memberof Options
     */
    gridTextInactiveColor?: string;
    /**
     * Background color for image grids
     * @type {string}
     * @memberof Options
     */
    gridBackgroundColor?: string;
    /**
     * Save text information about generation parameters as chunks to png files
     * @type {boolean}
     * @memberof Options
     */
    enablePnginfo?: boolean;
    /**
     * Create a text file next to every image with generation parameters.
     * @type {any}
     * @memberof Options
     */
    saveTxt?: any | null;
    /**
     * Save a copy of image before doing face restoration.
     * @type {any}
     * @memberof Options
     */
    saveImagesBeforeFaceRestoration?: any | null;
    /**
     * Save a copy of image before applying highres fix.
     * @type {any}
     * @memberof Options
     */
    saveImagesBeforeHighresFix?: any | null;
    /**
     * Save a copy of image before applying color correction to img2img results
     * @type {any}
     * @memberof Options
     */
    saveImagesBeforeColorCorrection?: any | null;
    /**
     * For inpainting, save a copy of the greyscale mask
     * @type {any}
     * @memberof Options
     */
    saveMask?: any | null;
    /**
     * For inpainting, save a masked composite
     * @type {any}
     * @memberof Options
     */
    saveMaskComposite?: any | null;
    /**
     * Quality for saved jpeg images
     * @type {number}
     * @memberof Options
     */
    jpegQuality?: number;
    /**
     * Use lossless compression for webp images
     * @type {any}
     * @memberof Options
     */
    webpLossless?: any | null;
    /**
     * Save copy of large images as JPG
     * @type {boolean}
     * @memberof Options
     */
    exportFor4chan?: boolean;
    /**
     * File size limit for the above option, MB
     * @type {number}
     * @memberof Options
     */
    imgDownscaleThreshold?: number;
    /**
     * Width/height limit for the above option, in pixels
     * @type {number}
     * @memberof Options
     */
    targetSideLength?: number;
    /**
     * Maximum image size
     * @type {number}
     * @memberof Options
     */
    imgMaxSizeMp?: number;
    /**
     * Use original name for output filename during batch process in extras tab
     * @type {boolean}
     * @memberof Options
     */
    useOriginalNameBatch?: boolean;
    /**
     * Use upscaler name as filename suffix in the extras tab
     * @type {any}
     * @memberof Options
     */
    useUpscalerNameAsSuffix?: any | null;
    /**
     * When using 'Save' button, only save a single selected image
     * @type {boolean}
     * @memberof Options
     */
    saveSelectedOnly?: boolean;
    /**
     * Save init images when using img2img
     * @type {any}
     * @memberof Options
     */
    saveInitImg?: any | null;
    /**
     * Directory for temporary images; leave empty for default
     * @type {any}
     * @memberof Options
     */
    tempDir?: any | null;
    /**
     * Cleanup non-default temporary directory when starting webui
     * @type {any}
     * @memberof Options
     */
    cleanTempDirAtStart?: any | null;
    /**
     * Save incomplete images
     * @type {any}
     * @memberof Options
     */
    saveIncompleteImages?: any | null;
    /**
     * Play notification sound after image generation
     * @type {boolean}
     * @memberof Options
     */
    notificationAudio?: boolean;
    /**
     * Output directory for images; if empty, defaults to three directories below
     * @type {any}
     * @memberof Options
     */
    outdirSamples?: any | null;
    /**
     * Output directory for txt2img images
     * @type {string}
     * @memberof Options
     */
    outdirTxt2imgSamples?: string;
    /**
     * Output directory for img2img images
     * @type {string}
     * @memberof Options
     */
    outdirImg2imgSamples?: string;
    /**
     * Output directory for images from extras tab
     * @type {string}
     * @memberof Options
     */
    outdirExtrasSamples?: string;
    /**
     * Output directory for grids; if empty, defaults to two directories below
     * @type {any}
     * @memberof Options
     */
    outdirGrids?: any | null;
    /**
     * Output directory for txt2img grids
     * @type {string}
     * @memberof Options
     */
    outdirTxt2imgGrids?: string;
    /**
     * Output directory for img2img grids
     * @type {string}
     * @memberof Options
     */
    outdirImg2imgGrids?: string;
    /**
     * Directory for saving images using the Save button
     * @type {string}
     * @memberof Options
     */
    outdirSave?: string;
    /**
     * Directory for saving init images when using img2img
     * @type {string}
     * @memberof Options
     */
    outdirInitImages?: string;
    /**
     * Save images to a subdirectory
     * @type {boolean}
     * @memberof Options
     */
    saveToDirs?: boolean;
    /**
     * Save grids to a subdirectory
     * @type {boolean}
     * @memberof Options
     */
    gridSaveToDirs?: boolean;
    /**
     * When using "Save" button, save images to a subdirectory
     * @type {any}
     * @memberof Options
     */
    useSaveToDirsForUi?: any | null;
    /**
     * Directory name pattern
     * @type {string}
     * @memberof Options
     */
    directoriesFilenamePattern?: string;
    /**
     * Max prompt words for [prompt_words] pattern
     * @type {number}
     * @memberof Options
     */
    directoriesMaxPromptWords?: number;
    /**
     * Tile size for ESRGAN upscalers.
     * @type {number}
     * @memberof Options
     */
    eSRGANTile?: number;
    /**
     * Tile overlap for ESRGAN upscalers.
     * @type {number}
     * @memberof Options
     */
    eSRGANTileOverlap?: number;
    /**
     * Select which Real-ESRGAN models to show in the web UI.
     * @type {Array<any>}
     * @memberof Options
     */
    realesrganEnabledModels?: Array<any>;
    /**
     * Upscaler for img2img
     * @type {any}
     * @memberof Options
     */
    upscalerForImg2img?: any | null;
    /**
     * Restore faces
     * @type {any}
     * @memberof Options
     */
    faceRestoration?: any | null;
    /**
     * Face restoration model
     * @type {string}
     * @memberof Options
     */
    faceRestorationModel?: string;
    /**
     * CodeFormer weight
     * @type {number}
     * @memberof Options
     */
    codeFormerWeight?: number;
    /**
     * Move face restoration model from VRAM into RAM after processing
     * @type {any}
     * @memberof Options
     */
    faceRestorationUnload?: any | null;
    /**
     * Automatically open webui in browser on startup
     * @type {string}
     * @memberof Options
     */
    autoLaunchBrowser?: string;
    /**
     * Print prompts to console when generating with txt2img and img2img.
     * @type {any}
     * @memberof Options
     */
    enableConsolePrompts?: any | null;
    /**
     * Show warnings in console.
     * @type {any}
     * @memberof Options
     */
    showWarnings?: any | null;
    /**
     * Show gradio deprecation warnings in console.
     * @type {boolean}
     * @memberof Options
     */
    showGradioDeprecationWarnings?: boolean;
    /**
     * VRAM usage polls per second during generation.
     * @type {number}
     * @memberof Options
     */
    memmonPollRate?: number;
    /**
     * Always print all generation info to standard output
     * @type {any}
     * @memberof Options
     */
    samplesLogStdout?: any | null;
    /**
     * Add a second progress bar to the console that shows progress for an entire job.
     * @type {boolean}
     * @memberof Options
     */
    multipleTqdm?: boolean;
    /**
     * Print extra hypernetwork information to console.
     * @type {any}
     * @memberof Options
     */
    printHypernetExtra?: any | null;
    /**
     * Load models/files in hidden directories
     * @type {boolean}
     * @memberof Options
     */
    listHiddenFiles?: boolean;
    /**
     * Disable memmapping for loading .safetensors files.
     * @type {any}
     * @memberof Options
     */
    disableMmapLoadSafetensors?: any | null;
    /**
     * Prevent Stability-AI's ldm/sgm modules from printing noise to console.
     * @type {boolean}
     * @memberof Options
     */
    hideLdmPrints?: boolean;
    /**
     * Print stack traces before exiting the program with ctrl+c.
     * @type {any}
     * @memberof Options
     */
    dumpStacksOnSignal?: any | null;
    /**
     * Allow http:// and https:// URLs for input images in API
     * @type {boolean}
     * @memberof Options
     */
    apiEnableRequests?: boolean;
    /**
     * Forbid URLs to local resources
     * @type {boolean}
     * @memberof Options
     */
    apiForbidLocalRequests?: boolean;
    /**
     * User agent for requests
     * @type {any}
     * @memberof Options
     */
    apiUseragent?: any | null;
    /**
     * Move VAE and CLIP to RAM when training if possible. Saves VRAM.
     * @type {any}
     * @memberof Options
     */
    unloadModelsWhenTraining?: any | null;
    /**
     * Turn on pin_memory for DataLoader. Makes training slightly faster but can increase memory usage.
     * @type {any}
     * @memberof Options
     */
    pinMemory?: any | null;
    /**
     * Saves Optimizer state as separate *.optim file. Training of embedding or HN can be resumed with the matching optim file.
     * @type {any}
     * @memberof Options
     */
    saveOptimizerState?: any | null;
    /**
     * Save textual inversion and hypernet settings to a text file whenever training starts.
     * @type {boolean}
     * @memberof Options
     */
    saveTrainingSettingsToTxt?: boolean;
    /**
     * Filename word regex
     * @type {any}
     * @memberof Options
     */
    datasetFilenameWordRegex?: any | null;
    /**
     * Filename join string
     * @type {string}
     * @memberof Options
     */
    datasetFilenameJoinString?: string;
    /**
     * Number of repeats for a single input image per epoch; used only for displaying epoch number
     * @type {number}
     * @memberof Options
     */
    trainingImageRepeatsPerEpoch?: number;
    /**
     * Save an csv containing the loss to log directory every N steps, 0 to disable
     * @type {number}
     * @memberof Options
     */
    trainingWriteCsvEvery?: number;
    /**
     * Use cross attention optimizations while training
     * @type {any}
     * @memberof Options
     */
    trainingXattentionOptimizations?: any | null;
    /**
     * Enable tensorboard logging.
     * @type {any}
     * @memberof Options
     */
    trainingEnableTensorboard?: any | null;
    /**
     * Save generated images within tensorboard.
     * @type {any}
     * @memberof Options
     */
    trainingTensorboardSaveImages?: any | null;
    /**
     * How often, in seconds, to flush the pending tensorboard events and summaries to disk.
     * @type {number}
     * @memberof Options
     */
    trainingTensorboardFlushEvery?: number;
    /**
     * Stable Diffusion checkpoint
     * @type {any}
     * @memberof Options
     */
    sdModelCheckpoint?: any | null;
    /**
     * Maximum number of checkpoints loaded at the same time
     * @type {number}
     * @memberof Options
     */
    sdCheckpointsLimit?: number;
    /**
     * Only keep one model on device
     * @type {boolean}
     * @memberof Options
     */
    sdCheckpointsKeepInCpu?: boolean;
    /**
     * Checkpoints to cache in RAM
     * @type {any}
     * @memberof Options
     */
    sdCheckpointCache?: any | null;
    /**
     * SD Unet
     * @type {string}
     * @memberof Options
     */
    sdUnet?: string;
    /**
     * Enable quantization in K samplers for sharper and cleaner results. This may change existing seeds
     * @type {any}
     * @memberof Options
     */
    enableQuantization?: any | null;
    /**
     * Enable emphasis
     * @type {boolean}
     * @memberof Options
     */
    enableEmphasis?: boolean;
    /**
     * Make K-diffusion samplers produce same images in a batch as when making a single image
     * @type {boolean}
     * @memberof Options
     */
    enableBatchSeeds?: boolean;
    /**
     * Prompt word wrap length limit
     * @type {number}
     * @memberof Options
     */
    commaPaddingBacktrack?: number;
    /**
     * Clip skip
     * @type {number}
     * @memberof Options
     */
    cLIPStopAtLastLayers?: number;
    /**
     * Upcast cross attention layer to float32
     * @type {any}
     * @memberof Options
     */
    upcastAttn?: any | null;
    /**
     * Random number generator source.
     * @type {string}
     * @memberof Options
     */
    randnSource?: string;
    /**
     * Tiling
     * @type {any}
     * @memberof Options
     */
    tiling?: any | null;
    /**
     * Hires fix: which pass to enable refiner for
     * @type {string}
     * @memberof Options
     */
    hiresFixRefinerPass?: string;
    /**
     * crop top coordinate
     * @type {any}
     * @memberof Options
     */
    sdxlCropTop?: any | null;
    /**
     * crop left coordinate
     * @type {any}
     * @memberof Options
     */
    sdxlCropLeft?: any | null;
    /**
     * SDXL low aesthetic score
     * @type {number}
     * @memberof Options
     */
    sdxlRefinerLowAestheticScore?: number;
    /**
     * SDXL high aesthetic score
     * @type {number}
     * @memberof Options
     */
    sdxlRefinerHighAestheticScore?: number;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    sdVaeExplanation?: string;
    /**
     * VAE Checkpoints to cache in RAM
     * @type {any}
     * @memberof Options
     */
    sdVaeCheckpointCache?: any | null;
    /**
     * SD VAE
     * @type {string}
     * @memberof Options
     */
    sdVae?: string;
    /**
     * Selected VAE overrides per-model preferences
     * @type {boolean}
     * @memberof Options
     */
    sdVaeOverridesPerModelPreferences?: boolean;
    /**
     * Automatically revert VAE to 32-bit floats
     * @type {boolean}
     * @memberof Options
     */
    autoVaePrecision?: boolean;
    /**
     * VAE type for encode
     * @type {string}
     * @memberof Options
     */
    sdVaeEncodeMethod?: string;
    /**
     * VAE type for decode
     * @type {string}
     * @memberof Options
     */
    sdVaeDecodeMethod?: string;
    /**
     * Inpainting conditioning mask strength
     * @type {number}
     * @memberof Options
     */
    inpaintingMaskWeight?: number;
    /**
     * Noise multiplier for img2img
     * @type {number}
     * @memberof Options
     */
    initialNoiseMultiplier?: number;
    /**
     * Extra noise multiplier for img2img and hires fix
     * @type {any}
     * @memberof Options
     */
    img2imgExtraNoise?: any | null;
    /**
     * Apply color correction to img2img results to match original colors.
     * @type {any}
     * @memberof Options
     */
    img2imgColorCorrection?: any | null;
    /**
     * With img2img, do exactly the amount of steps the slider specifies.
     * @type {any}
     * @memberof Options
     */
    img2imgFixSteps?: any | null;
    /**
     * With img2img, fill transparent parts of the input image with this color.
     * @type {string}
     * @memberof Options
     */
    img2imgBackgroundColor?: string;
    /**
     * Height of the image editor
     * @type {number}
     * @memberof Options
     */
    img2imgEditorHeight?: number;
    /**
     * Sketch initial brush color
     * @type {string}
     * @memberof Options
     */
    img2imgSketchDefaultBrushColor?: string;
    /**
     * Inpaint mask brush color
     * @type {string}
     * @memberof Options
     */
    img2imgInpaintMaskBrushColor?: string;
    /**
     * Inpaint sketch initial brush color
     * @type {string}
     * @memberof Options
     */
    img2imgInpaintSketchDefaultBrushColor?: string;
    /**
     * For inpainting, include the greyscale mask in results for web
     * @type {any}
     * @memberof Options
     */
    returnMask?: any | null;
    /**
     * For inpainting, include masked composite in results for web
     * @type {any}
     * @memberof Options
     */
    returnMaskComposite?: any | null;
    /**
     * Cross attention optimization
     * @type {string}
     * @memberof Options
     */
    crossAttentionOptimization?: string;
    /**
     * Negative Guidance minimum sigma
     * @type {any}
     * @memberof Options
     */
    sMinUncond?: any | null;
    /**
     * Token merging ratio
     * @type {any}
     * @memberof Options
     */
    tokenMergingRatio?: any | null;
    /**
     * Token merging ratio for img2img
     * @type {any}
     * @memberof Options
     */
    tokenMergingRatioImg2img?: any | null;
    /**
     * Token merging ratio for high-res pass
     * @type {any}
     * @memberof Options
     */
    tokenMergingRatioHr?: any | null;
    /**
     * Pad prompt/negative prompt to be same length
     * @type {any}
     * @memberof Options
     */
    padCondUncond?: any | null;
    /**
     * Persistent cond cache
     * @type {boolean}
     * @memberof Options
     */
    persistentCondCache?: boolean;
    /**
     * Batch cond/uncond
     * @type {boolean}
     * @memberof Options
     */
    batchCondUncond?: boolean;
    /**
     * Use old emphasis implementation. Can be useful to reproduce old seeds.
     * @type {any}
     * @memberof Options
     */
    useOldEmphasisImplementation?: any | null;
    /**
     * Use old karras scheduler sigmas (0.1 to 10).
     * @type {any}
     * @memberof Options
     */
    useOldKarrasSchedulerSigmas?: any | null;
    /**
     * Do not make DPM++ SDE deterministic across different batch sizes.
     * @type {any}
     * @memberof Options
     */
    noDpmppSdeBatchDeterminism?: any | null;
    /**
     * For hires fix, use width/height sliders to set final resolution rather than first pass (disables Upscale by, Resize width/height to).
     * @type {any}
     * @memberof Options
     */
    useOldHiresFixWidthHeight?: any | null;
    /**
     * Do not fix prompt schedule for second order samplers.
     * @type {any}
     * @memberof Options
     */
    dontFixSecondOrderSamplersSchedule?: any | null;
    /**
     * For hires fix, calculate conds of second pass using extra networks of first pass.
     * @type {any}
     * @memberof Options
     */
    hiresFixUseFirstpassConds?: any | null;
    /**
     * Use old prompt editing timelines.
     * @type {any}
     * @memberof Options
     */
    useOldScheduling?: any | null;
    /**
     * Keep models in VRAM
     * @type {any}
     * @memberof Options
     */
    interrogateKeepModelsInMemory?: any | null;
    /**
     * Include ranks of model tags matches in results.
     * @type {any}
     * @memberof Options
     */
    interrogateReturnRanks?: any | null;
    /**
     * BLIP: num_beams
     * @type {number}
     * @memberof Options
     */
    interrogateClipNumBeams?: number;
    /**
     * BLIP: minimum description length
     * @type {number}
     * @memberof Options
     */
    interrogateClipMinLength?: number;
    /**
     * BLIP: maximum description length
     * @type {number}
     * @memberof Options
     */
    interrogateClipMaxLength?: number;
    /**
     * CLIP: maximum number of lines in text file
     * @type {number}
     * @memberof Options
     */
    interrogateClipDictLimit?: number;
    /**
     * CLIP: skip inquire categories
     * @type {any}
     * @memberof Options
     */
    interrogateClipSkipCategories?: any | null;
    /**
     * deepbooru: score threshold
     * @type {number}
     * @memberof Options
     */
    interrogateDeepbooruScoreThreshold?: number;
    /**
     * deepbooru: sort tags alphabetically
     * @type {boolean}
     * @memberof Options
     */
    deepbooruSortAlpha?: boolean;
    /**
     * deepbooru: use spaces in tags
     * @type {boolean}
     * @memberof Options
     */
    deepbooruUseSpaces?: boolean;
    /**
     * deepbooru: escape (\) brackets
     * @type {boolean}
     * @memberof Options
     */
    deepbooruEscape?: boolean;
    /**
     * deepbooru: filter out those tags
     * @type {any}
     * @memberof Options
     */
    deepbooruFilterTags?: any | null;
    /**
     * Show hidden directories
     * @type {boolean}
     * @memberof Options
     */
    extraNetworksShowHiddenDirectories?: boolean;
    /**
     * Show cards for models in hidden directories
     * @type {string}
     * @memberof Options
     */
    extraNetworksHiddenModels?: string;
    /**
     * Default multiplier for extra networks
     * @type {number}
     * @memberof Options
     */
    extraNetworksDefaultMultiplier?: number;
    /**
     * Card width for Extra Networks
     * @type {any}
     * @memberof Options
     */
    extraNetworksCardWidth?: any | null;
    /**
     * Card height for Extra Networks
     * @type {any}
     * @memberof Options
     */
    extraNetworksCardHeight?: any | null;
    /**
     * Card text scale
     * @type {number}
     * @memberof Options
     */
    extraNetworksCardTextScale?: number;
    /**
     * Show description on card
     * @type {boolean}
     * @memberof Options
     */
    extraNetworksCardShowDesc?: boolean;
    /**
     * Extra networks separator
     * @type {string}
     * @memberof Options
     */
    extraNetworksAddTextSeparator?: string;
    /**
     * Extra networks tab order
     * @type {any}
     * @memberof Options
     */
    uiExtraNetworksTabReorder?: any | null;
    /**
     * Print a list of Textual Inversion embeddings when loading model
     * @type {any}
     * @memberof Options
     */
    textualInversionPrintAtLoad?: any | null;
    /**
     * Add Textual Inversion hashes to infotext
     * @type {boolean}
     * @memberof Options
     */
    textualInversionAddHashesToInfotext?: boolean;
    /**
     * Add hypernetwork to prompt
     * @type {string}
     * @memberof Options
     */
    sdHypernetwork?: string;
    /**
     * Localization
     * @type {string}
     * @memberof Options
     */
    localization?: string;
    /**
     * Gradio theme
     * @type {string}
     * @memberof Options
     */
    gradioTheme?: string;
    /**
     * Cache gradio themes locally
     * @type {boolean}
     * @memberof Options
     */
    gradioThemesCache?: boolean;
    /**
     * Gallery height
     * @type {any}
     * @memberof Options
     */
    galleryHeight?: any | null;
    /**
     * Show grid in results for web
     * @type {boolean}
     * @memberof Options
     */
    returnGrid?: boolean;
    /**
     * Do not show any images in results for web
     * @type {any}
     * @memberof Options
     */
    doNotShowImages?: any | null;
    /**
     * Send seed when sending prompt or image to other interface
     * @type {boolean}
     * @memberof Options
     */
    sendSeed?: boolean;
    /**
     * Send size when sending prompt or image to another interface
     * @type {boolean}
     * @memberof Options
     */
    sendSize?: boolean;
    /**
     * Enable full page image viewer
     * @type {boolean}
     * @memberof Options
     */
    jsModalLightbox?: boolean;
    /**
     * Show images zoomed in by default in full page image viewer
     * @type {boolean}
     * @memberof Options
     */
    jsModalLightboxInitiallyZoomed?: boolean;
    /**
     * Navigate image viewer with gamepad
     * @type {any}
     * @memberof Options
     */
    jsModalLightboxGamepad?: any | null;
    /**
     * Gamepad repeat period, in milliseconds
     * @type {number}
     * @memberof Options
     */
    jsModalLightboxGamepadRepeat?: number;
    /**
     * Show generation progress in window title.
     * @type {boolean}
     * @memberof Options
     */
    showProgressInTitle?: boolean;
    /**
     * Use dropdown for sampler selection instead of radio group
     * @type {boolean}
     * @memberof Options
     */
    samplersInDropdown?: boolean;
    /**
     * Show Width/Height and Batch sliders in same row
     * @type {boolean}
     * @memberof Options
     */
    dimensionsAndBatchTogether?: boolean;
    /**
     * Ctrl+up/down precision when editing (attention:1.1)
     * @type {number}
     * @memberof Options
     */
    keyeditPrecisionAttention?: number;
    /**
     * Ctrl+up/down precision when editing <extra networks:0.9>
     * @type {number}
     * @memberof Options
     */
    keyeditPrecisionExtra?: number;
    /**
     * Ctrl+up/down word delimiters
     * @type {string}
     * @memberof Options
     */
    keyeditDelimiters?: string;
    /**
     * Ctrl+up/down whitespace delimiters
     * @type {Array<any>}
     * @memberof Options
     */
    keyeditDelimitersWhitespace?: Array<any>;
    /**
     * Alt+left/right moves prompt elements
     * @type {boolean}
     * @memberof Options
     */
    keyeditMove?: boolean;
    /**
     * Quicksettings list
     * @type {Array<any>}
     * @memberof Options
     */
    quicksettingsList?: Array<any>;
    /**
     * UI tab order
     * @type {any}
     * @memberof Options
     */
    uiTabOrder?: any | null;
    /**
     * Hidden UI tabs
     * @type {any}
     * @memberof Options
     */
    hiddenTabs?: any | null;
    /**
     * txt2img/img2img UI item order
     * @type {any}
     * @memberof Options
     */
    uiReorderList?: any | null;
    /**
     * Checkpoint dropdown: use filenames without paths
     * @type {any}
     * @memberof Options
     */
    sdCheckpointDropdownUseShort?: any | null;
    /**
     * Hires fix: show hires checkpoint and sampler selection
     * @type {any}
     * @memberof Options
     */
    hiresFixShowSampler?: any | null;
    /**
     * Hires fix: show hires prompt and negative prompt
     * @type {any}
     * @memberof Options
     */
    hiresFixShowPrompts?: any | null;
    /**
     * Disable prompt token counters
     * @type {any}
     * @memberof Options
     */
    disableTokenCounters?: any | null;
    /**
     * Add model hash to generation information
     * @type {boolean}
     * @memberof Options
     */
    addModelHashToInfo?: boolean;
    /**
     * Add model name to generation information
     * @type {boolean}
     * @memberof Options
     */
    addModelNameToInfo?: boolean;
    /**
     * Add user name to generation information when authenticated
     * @type {any}
     * @memberof Options
     */
    addUserNameToInfo?: any | null;
    /**
     * Add program version to generation information
     * @type {boolean}
     * @memberof Options
     */
    addVersionToInfotext?: boolean;
    /**
     * Disregard checkpoint information from pasted infotext
     * @type {boolean}
     * @memberof Options
     */
    disableWeightsAutoSwap?: boolean;
    /**
     * Infer styles from prompts of pasted infotext
     * @type {string}
     * @memberof Options
     */
    infotextStyles?: string;
    /**
     * Show progressbar
     * @type {boolean}
     * @memberof Options
     */
    showProgressbar?: boolean;
    /**
     * Show live previews of the created image
     * @type {boolean}
     * @memberof Options
     */
    livePreviewsEnable?: boolean;
    /**
     * Live preview file format
     * @type {string}
     * @memberof Options
     */
    livePreviewsImageFormat?: string;
    /**
     * Show previews of all images generated in a batch as a grid
     * @type {boolean}
     * @memberof Options
     */
    showProgressGrid?: boolean;
    /**
     * Live preview display period
     * @type {number}
     * @memberof Options
     */
    showProgressEveryNSteps?: number;
    /**
     * Live preview method
     * @type {string}
     * @memberof Options
     */
    showProgressType?: string;
    /**
     * Allow Full live preview method with lowvram/medvram
     * @type {any}
     * @memberof Options
     */
    livePreviewAllowLowvramFull?: any | null;
    /**
     * Live preview subject
     * @type {string}
     * @memberof Options
     */
    livePreviewContent?: string;
    /**
     * Progressbar and preview update period
     * @type {number}
     * @memberof Options
     */
    livePreviewRefreshPeriod?: number;
    /**
     * Return image with chosen live preview method on interrupt
     * @type {any}
     * @memberof Options
     */
    livePreviewFastInterrupt?: any | null;
    /**
     * Hide samplers in user interface
     * @type {any}
     * @memberof Options
     */
    hideSamplers?: any | null;
    /**
     * Eta for DDIM
     * @type {any}
     * @memberof Options
     */
    etaDdim?: any | null;
    /**
     * Eta for k-diffusion samplers
     * @type {number}
     * @memberof Options
     */
    etaAncestral?: number;
    /**
     * img2img DDIM discretize
     * @type {string}
     * @memberof Options
     */
    ddimDiscretize?: string;
    /**
     * sigma churn
     * @type {any}
     * @memberof Options
     */
    sChurn?: any | null;
    /**
     * sigma tmin
     * @type {any}
     * @memberof Options
     */
    sTmin?: any | null;
    /**
     * sigma tmax
     * @type {any}
     * @memberof Options
     */
    sTmax?: any | null;
    /**
     * sigma noise
     * @type {number}
     * @memberof Options
     */
    sNoise?: number;
    /**
     * Scheduler type
     * @type {string}
     * @memberof Options
     */
    kSchedType?: string;
    /**
     * sigma min
     * @type {any}
     * @memberof Options
     */
    sigmaMin?: any | null;
    /**
     * sigma max
     * @type {any}
     * @memberof Options
     */
    sigmaMax?: any | null;
    /**
     * rho
     * @type {any}
     * @memberof Options
     */
    rho?: any | null;
    /**
     * Eta noise seed delta
     * @type {any}
     * @memberof Options
     */
    etaNoiseSeedDelta?: any | null;
    /**
     * Always discard next-to-last sigma
     * @type {any}
     * @memberof Options
     */
    alwaysDiscardNextToLastSigma?: any | null;
    /**
     * SGM noise multiplier
     * @type {any}
     * @memberof Options
     */
    sgmNoiseMultiplier?: any | null;
    /**
     * UniPC variant
     * @type {string}
     * @memberof Options
     */
    uniPcVariant?: string;
    /**
     * UniPC skip type
     * @type {string}
     * @memberof Options
     */
    uniPcSkipType?: string;
    /**
     * UniPC order
     * @type {number}
     * @memberof Options
     */
    uniPcOrder?: number;
    /**
     * UniPC lower order final
     * @type {boolean}
     * @memberof Options
     */
    uniPcLowerOrderFinal?: boolean;
    /**
     * Enable postprocessing operations in txt2img and img2img tabs
     * @type {any}
     * @memberof Options
     */
    postprocessingEnableInMainUi?: any | null;
    /**
     * Postprocessing operation order
     * @type {any}
     * @memberof Options
     */
    postprocessingOperationOrder?: any | null;
    /**
     * Maximum number of images in upscaling cache
     * @type {number}
     * @memberof Options
     */
    upscalingMaxImagesInCache?: number;
    /**
     * Disable these extensions
     * @type {any}
     * @memberof Options
     */
    disabledExtensions?: any | null;
    /**
     * Disable all extensions (preserves the list of disabled extensions)
     * @type {string}
     * @memberof Options
     */
    disableAllExtensions?: string;
    /**
     * Config state file to restore from, under 'config-states/' folder
     * @type {any}
     * @memberof Options
     */
    restoreConfigStateFile?: any | null;
    /**
     * SHA256 hash of the current checkpoint
     * @type {any}
     * @memberof Options
     */
    sdCheckpointHash?: any | null;
    /**
     * Hotshot-XL model path
     * @type {string}
     * @memberof Options
     */
    hotshotXlModelPath?: string;
}

/**
 * Check if a given object implements the Options interface.
 */
export function instanceOfOptions(value: object): value is Options {
    return true;
}

export function OptionsFromJSON(json: any): Options {
    return OptionsFromJSONTyped(json, false);
}

export function OptionsFromJSONTyped(json: any, ignoreDiscriminator: boolean): Options {
    if (json == null) {
        return json;
    }
    return {
        
        'samplesSave': json['samples_save'] == null ? undefined : json['samples_save'],
        'samplesFormat': json['samples_format'] == null ? undefined : json['samples_format'],
        'samplesFilenamePattern': json['samples_filename_pattern'] == null ? undefined : json['samples_filename_pattern'],
        'saveImagesAddNumber': json['save_images_add_number'] == null ? undefined : json['save_images_add_number'],
        'saveImagesReplaceAction': json['save_images_replace_action'] == null ? undefined : json['save_images_replace_action'],
        'gridSave': json['grid_save'] == null ? undefined : json['grid_save'],
        'gridFormat': json['grid_format'] == null ? undefined : json['grid_format'],
        'gridExtendedFilename': json['grid_extended_filename'] == null ? undefined : json['grid_extended_filename'],
        'gridOnlyIfMultiple': json['grid_only_if_multiple'] == null ? undefined : json['grid_only_if_multiple'],
        'gridPreventEmptySpots': json['grid_prevent_empty_spots'] == null ? undefined : json['grid_prevent_empty_spots'],
        'gridZipFilenamePattern': json['grid_zip_filename_pattern'] == null ? undefined : json['grid_zip_filename_pattern'],
        'nRows': json['n_rows'] == null ? undefined : json['n_rows'],
        'font': json['font'] == null ? undefined : json['font'],
        'gridTextActiveColor': json['grid_text_active_color'] == null ? undefined : json['grid_text_active_color'],
        'gridTextInactiveColor': json['grid_text_inactive_color'] == null ? undefined : json['grid_text_inactive_color'],
        'gridBackgroundColor': json['grid_background_color'] == null ? undefined : json['grid_background_color'],
        'enablePnginfo': json['enable_pnginfo'] == null ? undefined : json['enable_pnginfo'],
        'saveTxt': json['save_txt'] == null ? undefined : json['save_txt'],
        'saveImagesBeforeFaceRestoration': json['save_images_before_face_restoration'] == null ? undefined : json['save_images_before_face_restoration'],
        'saveImagesBeforeHighresFix': json['save_images_before_highres_fix'] == null ? undefined : json['save_images_before_highres_fix'],
        'saveImagesBeforeColorCorrection': json['save_images_before_color_correction'] == null ? undefined : json['save_images_before_color_correction'],
        'saveMask': json['save_mask'] == null ? undefined : json['save_mask'],
        'saveMaskComposite': json['save_mask_composite'] == null ? undefined : json['save_mask_composite'],
        'jpegQuality': json['jpeg_quality'] == null ? undefined : json['jpeg_quality'],
        'webpLossless': json['webp_lossless'] == null ? undefined : json['webp_lossless'],
        'exportFor4chan': json['export_for_4chan'] == null ? undefined : json['export_for_4chan'],
        'imgDownscaleThreshold': json['img_downscale_threshold'] == null ? undefined : json['img_downscale_threshold'],
        'targetSideLength': json['target_side_length'] == null ? undefined : json['target_side_length'],
        'imgMaxSizeMp': json['img_max_size_mp'] == null ? undefined : json['img_max_size_mp'],
        'useOriginalNameBatch': json['use_original_name_batch'] == null ? undefined : json['use_original_name_batch'],
        'useUpscalerNameAsSuffix': json['use_upscaler_name_as_suffix'] == null ? undefined : json['use_upscaler_name_as_suffix'],
        'saveSelectedOnly': json['save_selected_only'] == null ? undefined : json['save_selected_only'],
        'saveInitImg': json['save_init_img'] == null ? undefined : json['save_init_img'],
        'tempDir': json['temp_dir'] == null ? undefined : json['temp_dir'],
        'cleanTempDirAtStart': json['clean_temp_dir_at_start'] == null ? undefined : json['clean_temp_dir_at_start'],
        'saveIncompleteImages': json['save_incomplete_images'] == null ? undefined : json['save_incomplete_images'],
        'notificationAudio': json['notification_audio'] == null ? undefined : json['notification_audio'],
        'outdirSamples': json['outdir_samples'] == null ? undefined : json['outdir_samples'],
        'outdirTxt2imgSamples': json['outdir_txt2img_samples'] == null ? undefined : json['outdir_txt2img_samples'],
        'outdirImg2imgSamples': json['outdir_img2img_samples'] == null ? undefined : json['outdir_img2img_samples'],
        'outdirExtrasSamples': json['outdir_extras_samples'] == null ? undefined : json['outdir_extras_samples'],
        'outdirGrids': json['outdir_grids'] == null ? undefined : json['outdir_grids'],
        'outdirTxt2imgGrids': json['outdir_txt2img_grids'] == null ? undefined : json['outdir_txt2img_grids'],
        'outdirImg2imgGrids': json['outdir_img2img_grids'] == null ? undefined : json['outdir_img2img_grids'],
        'outdirSave': json['outdir_save'] == null ? undefined : json['outdir_save'],
        'outdirInitImages': json['outdir_init_images'] == null ? undefined : json['outdir_init_images'],
        'saveToDirs': json['save_to_dirs'] == null ? undefined : json['save_to_dirs'],
        'gridSaveToDirs': json['grid_save_to_dirs'] == null ? undefined : json['grid_save_to_dirs'],
        'useSaveToDirsForUi': json['use_save_to_dirs_for_ui'] == null ? undefined : json['use_save_to_dirs_for_ui'],
        'directoriesFilenamePattern': json['directories_filename_pattern'] == null ? undefined : json['directories_filename_pattern'],
        'directoriesMaxPromptWords': json['directories_max_prompt_words'] == null ? undefined : json['directories_max_prompt_words'],
        'eSRGANTile': json['ESRGAN_tile'] == null ? undefined : json['ESRGAN_tile'],
        'eSRGANTileOverlap': json['ESRGAN_tile_overlap'] == null ? undefined : json['ESRGAN_tile_overlap'],
        'realesrganEnabledModels': json['realesrgan_enabled_models'] == null ? undefined : json['realesrgan_enabled_models'],
        'upscalerForImg2img': json['upscaler_for_img2img'] == null ? undefined : json['upscaler_for_img2img'],
        'faceRestoration': json['face_restoration'] == null ? undefined : json['face_restoration'],
        'faceRestorationModel': json['face_restoration_model'] == null ? undefined : json['face_restoration_model'],
        'codeFormerWeight': json['code_former_weight'] == null ? undefined : json['code_former_weight'],
        'faceRestorationUnload': json['face_restoration_unload'] == null ? undefined : json['face_restoration_unload'],
        'autoLaunchBrowser': json['auto_launch_browser'] == null ? undefined : json['auto_launch_browser'],
        'enableConsolePrompts': json['enable_console_prompts'] == null ? undefined : json['enable_console_prompts'],
        'showWarnings': json['show_warnings'] == null ? undefined : json['show_warnings'],
        'showGradioDeprecationWarnings': json['show_gradio_deprecation_warnings'] == null ? undefined : json['show_gradio_deprecation_warnings'],
        'memmonPollRate': json['memmon_poll_rate'] == null ? undefined : json['memmon_poll_rate'],
        'samplesLogStdout': json['samples_log_stdout'] == null ? undefined : json['samples_log_stdout'],
        'multipleTqdm': json['multiple_tqdm'] == null ? undefined : json['multiple_tqdm'],
        'printHypernetExtra': json['print_hypernet_extra'] == null ? undefined : json['print_hypernet_extra'],
        'listHiddenFiles': json['list_hidden_files'] == null ? undefined : json['list_hidden_files'],
        'disableMmapLoadSafetensors': json['disable_mmap_load_safetensors'] == null ? undefined : json['disable_mmap_load_safetensors'],
        'hideLdmPrints': json['hide_ldm_prints'] == null ? undefined : json['hide_ldm_prints'],
        'dumpStacksOnSignal': json['dump_stacks_on_signal'] == null ? undefined : json['dump_stacks_on_signal'],
        'apiEnableRequests': json['api_enable_requests'] == null ? undefined : json['api_enable_requests'],
        'apiForbidLocalRequests': json['api_forbid_local_requests'] == null ? undefined : json['api_forbid_local_requests'],
        'apiUseragent': json['api_useragent'] == null ? undefined : json['api_useragent'],
        'unloadModelsWhenTraining': json['unload_models_when_training'] == null ? undefined : json['unload_models_when_training'],
        'pinMemory': json['pin_memory'] == null ? undefined : json['pin_memory'],
        'saveOptimizerState': json['save_optimizer_state'] == null ? undefined : json['save_optimizer_state'],
        'saveTrainingSettingsToTxt': json['save_training_settings_to_txt'] == null ? undefined : json['save_training_settings_to_txt'],
        'datasetFilenameWordRegex': json['dataset_filename_word_regex'] == null ? undefined : json['dataset_filename_word_regex'],
        'datasetFilenameJoinString': json['dataset_filename_join_string'] == null ? undefined : json['dataset_filename_join_string'],
        'trainingImageRepeatsPerEpoch': json['training_image_repeats_per_epoch'] == null ? undefined : json['training_image_repeats_per_epoch'],
        'trainingWriteCsvEvery': json['training_write_csv_every'] == null ? undefined : json['training_write_csv_every'],
        'trainingXattentionOptimizations': json['training_xattention_optimizations'] == null ? undefined : json['training_xattention_optimizations'],
        'trainingEnableTensorboard': json['training_enable_tensorboard'] == null ? undefined : json['training_enable_tensorboard'],
        'trainingTensorboardSaveImages': json['training_tensorboard_save_images'] == null ? undefined : json['training_tensorboard_save_images'],
        'trainingTensorboardFlushEvery': json['training_tensorboard_flush_every'] == null ? undefined : json['training_tensorboard_flush_every'],
        'sdModelCheckpoint': json['sd_model_checkpoint'] == null ? undefined : json['sd_model_checkpoint'],
        'sdCheckpointsLimit': json['sd_checkpoints_limit'] == null ? undefined : json['sd_checkpoints_limit'],
        'sdCheckpointsKeepInCpu': json['sd_checkpoints_keep_in_cpu'] == null ? undefined : json['sd_checkpoints_keep_in_cpu'],
        'sdCheckpointCache': json['sd_checkpoint_cache'] == null ? undefined : json['sd_checkpoint_cache'],
        'sdUnet': json['sd_unet'] == null ? undefined : json['sd_unet'],
        'enableQuantization': json['enable_quantization'] == null ? undefined : json['enable_quantization'],
        'enableEmphasis': json['enable_emphasis'] == null ? undefined : json['enable_emphasis'],
        'enableBatchSeeds': json['enable_batch_seeds'] == null ? undefined : json['enable_batch_seeds'],
        'commaPaddingBacktrack': json['comma_padding_backtrack'] == null ? undefined : json['comma_padding_backtrack'],
        'cLIPStopAtLastLayers': json['CLIP_stop_at_last_layers'] == null ? undefined : json['CLIP_stop_at_last_layers'],
        'upcastAttn': json['upcast_attn'] == null ? undefined : json['upcast_attn'],
        'randnSource': json['randn_source'] == null ? undefined : json['randn_source'],
        'tiling': json['tiling'] == null ? undefined : json['tiling'],
        'hiresFixRefinerPass': json['hires_fix_refiner_pass'] == null ? undefined : json['hires_fix_refiner_pass'],
        'sdxlCropTop': json['sdxl_crop_top'] == null ? undefined : json['sdxl_crop_top'],
        'sdxlCropLeft': json['sdxl_crop_left'] == null ? undefined : json['sdxl_crop_left'],
        'sdxlRefinerLowAestheticScore': json['sdxl_refiner_low_aesthetic_score'] == null ? undefined : json['sdxl_refiner_low_aesthetic_score'],
        'sdxlRefinerHighAestheticScore': json['sdxl_refiner_high_aesthetic_score'] == null ? undefined : json['sdxl_refiner_high_aesthetic_score'],
        'sdVaeExplanation': json['sd_vae_explanation'] == null ? undefined : json['sd_vae_explanation'],
        'sdVaeCheckpointCache': json['sd_vae_checkpoint_cache'] == null ? undefined : json['sd_vae_checkpoint_cache'],
        'sdVae': json['sd_vae'] == null ? undefined : json['sd_vae'],
        'sdVaeOverridesPerModelPreferences': json['sd_vae_overrides_per_model_preferences'] == null ? undefined : json['sd_vae_overrides_per_model_preferences'],
        'autoVaePrecision': json['auto_vae_precision'] == null ? undefined : json['auto_vae_precision'],
        'sdVaeEncodeMethod': json['sd_vae_encode_method'] == null ? undefined : json['sd_vae_encode_method'],
        'sdVaeDecodeMethod': json['sd_vae_decode_method'] == null ? undefined : json['sd_vae_decode_method'],
        'inpaintingMaskWeight': json['inpainting_mask_weight'] == null ? undefined : json['inpainting_mask_weight'],
        'initialNoiseMultiplier': json['initial_noise_multiplier'] == null ? undefined : json['initial_noise_multiplier'],
        'img2imgExtraNoise': json['img2img_extra_noise'] == null ? undefined : json['img2img_extra_noise'],
        'img2imgColorCorrection': json['img2img_color_correction'] == null ? undefined : json['img2img_color_correction'],
        'img2imgFixSteps': json['img2img_fix_steps'] == null ? undefined : json['img2img_fix_steps'],
        'img2imgBackgroundColor': json['img2img_background_color'] == null ? undefined : json['img2img_background_color'],
        'img2imgEditorHeight': json['img2img_editor_height'] == null ? undefined : json['img2img_editor_height'],
        'img2imgSketchDefaultBrushColor': json['img2img_sketch_default_brush_color'] == null ? undefined : json['img2img_sketch_default_brush_color'],
        'img2imgInpaintMaskBrushColor': json['img2img_inpaint_mask_brush_color'] == null ? undefined : json['img2img_inpaint_mask_brush_color'],
        'img2imgInpaintSketchDefaultBrushColor': json['img2img_inpaint_sketch_default_brush_color'] == null ? undefined : json['img2img_inpaint_sketch_default_brush_color'],
        'returnMask': json['return_mask'] == null ? undefined : json['return_mask'],
        'returnMaskComposite': json['return_mask_composite'] == null ? undefined : json['return_mask_composite'],
        'crossAttentionOptimization': json['cross_attention_optimization'] == null ? undefined : json['cross_attention_optimization'],
        'sMinUncond': json['s_min_uncond'] == null ? undefined : json['s_min_uncond'],
        'tokenMergingRatio': json['token_merging_ratio'] == null ? undefined : json['token_merging_ratio'],
        'tokenMergingRatioImg2img': json['token_merging_ratio_img2img'] == null ? undefined : json['token_merging_ratio_img2img'],
        'tokenMergingRatioHr': json['token_merging_ratio_hr'] == null ? undefined : json['token_merging_ratio_hr'],
        'padCondUncond': json['pad_cond_uncond'] == null ? undefined : json['pad_cond_uncond'],
        'persistentCondCache': json['persistent_cond_cache'] == null ? undefined : json['persistent_cond_cache'],
        'batchCondUncond': json['batch_cond_uncond'] == null ? undefined : json['batch_cond_uncond'],
        'useOldEmphasisImplementation': json['use_old_emphasis_implementation'] == null ? undefined : json['use_old_emphasis_implementation'],
        'useOldKarrasSchedulerSigmas': json['use_old_karras_scheduler_sigmas'] == null ? undefined : json['use_old_karras_scheduler_sigmas'],
        'noDpmppSdeBatchDeterminism': json['no_dpmpp_sde_batch_determinism'] == null ? undefined : json['no_dpmpp_sde_batch_determinism'],
        'useOldHiresFixWidthHeight': json['use_old_hires_fix_width_height'] == null ? undefined : json['use_old_hires_fix_width_height'],
        'dontFixSecondOrderSamplersSchedule': json['dont_fix_second_order_samplers_schedule'] == null ? undefined : json['dont_fix_second_order_samplers_schedule'],
        'hiresFixUseFirstpassConds': json['hires_fix_use_firstpass_conds'] == null ? undefined : json['hires_fix_use_firstpass_conds'],
        'useOldScheduling': json['use_old_scheduling'] == null ? undefined : json['use_old_scheduling'],
        'interrogateKeepModelsInMemory': json['interrogate_keep_models_in_memory'] == null ? undefined : json['interrogate_keep_models_in_memory'],
        'interrogateReturnRanks': json['interrogate_return_ranks'] == null ? undefined : json['interrogate_return_ranks'],
        'interrogateClipNumBeams': json['interrogate_clip_num_beams'] == null ? undefined : json['interrogate_clip_num_beams'],
        'interrogateClipMinLength': json['interrogate_clip_min_length'] == null ? undefined : json['interrogate_clip_min_length'],
        'interrogateClipMaxLength': json['interrogate_clip_max_length'] == null ? undefined : json['interrogate_clip_max_length'],
        'interrogateClipDictLimit': json['interrogate_clip_dict_limit'] == null ? undefined : json['interrogate_clip_dict_limit'],
        'interrogateClipSkipCategories': json['interrogate_clip_skip_categories'] == null ? undefined : json['interrogate_clip_skip_categories'],
        'interrogateDeepbooruScoreThreshold': json['interrogate_deepbooru_score_threshold'] == null ? undefined : json['interrogate_deepbooru_score_threshold'],
        'deepbooruSortAlpha': json['deepbooru_sort_alpha'] == null ? undefined : json['deepbooru_sort_alpha'],
        'deepbooruUseSpaces': json['deepbooru_use_spaces'] == null ? undefined : json['deepbooru_use_spaces'],
        'deepbooruEscape': json['deepbooru_escape'] == null ? undefined : json['deepbooru_escape'],
        'deepbooruFilterTags': json['deepbooru_filter_tags'] == null ? undefined : json['deepbooru_filter_tags'],
        'extraNetworksShowHiddenDirectories': json['extra_networks_show_hidden_directories'] == null ? undefined : json['extra_networks_show_hidden_directories'],
        'extraNetworksHiddenModels': json['extra_networks_hidden_models'] == null ? undefined : json['extra_networks_hidden_models'],
        'extraNetworksDefaultMultiplier': json['extra_networks_default_multiplier'] == null ? undefined : json['extra_networks_default_multiplier'],
        'extraNetworksCardWidth': json['extra_networks_card_width'] == null ? undefined : json['extra_networks_card_width'],
        'extraNetworksCardHeight': json['extra_networks_card_height'] == null ? undefined : json['extra_networks_card_height'],
        'extraNetworksCardTextScale': json['extra_networks_card_text_scale'] == null ? undefined : json['extra_networks_card_text_scale'],
        'extraNetworksCardShowDesc': json['extra_networks_card_show_desc'] == null ? undefined : json['extra_networks_card_show_desc'],
        'extraNetworksAddTextSeparator': json['extra_networks_add_text_separator'] == null ? undefined : json['extra_networks_add_text_separator'],
        'uiExtraNetworksTabReorder': json['ui_extra_networks_tab_reorder'] == null ? undefined : json['ui_extra_networks_tab_reorder'],
        'textualInversionPrintAtLoad': json['textual_inversion_print_at_load'] == null ? undefined : json['textual_inversion_print_at_load'],
        'textualInversionAddHashesToInfotext': json['textual_inversion_add_hashes_to_infotext'] == null ? undefined : json['textual_inversion_add_hashes_to_infotext'],
        'sdHypernetwork': json['sd_hypernetwork'] == null ? undefined : json['sd_hypernetwork'],
        'localization': json['localization'] == null ? undefined : json['localization'],
        'gradioTheme': json['gradio_theme'] == null ? undefined : json['gradio_theme'],
        'gradioThemesCache': json['gradio_themes_cache'] == null ? undefined : json['gradio_themes_cache'],
        'galleryHeight': json['gallery_height'] == null ? undefined : json['gallery_height'],
        'returnGrid': json['return_grid'] == null ? undefined : json['return_grid'],
        'doNotShowImages': json['do_not_show_images'] == null ? undefined : json['do_not_show_images'],
        'sendSeed': json['send_seed'] == null ? undefined : json['send_seed'],
        'sendSize': json['send_size'] == null ? undefined : json['send_size'],
        'jsModalLightbox': json['js_modal_lightbox'] == null ? undefined : json['js_modal_lightbox'],
        'jsModalLightboxInitiallyZoomed': json['js_modal_lightbox_initially_zoomed'] == null ? undefined : json['js_modal_lightbox_initially_zoomed'],
        'jsModalLightboxGamepad': json['js_modal_lightbox_gamepad'] == null ? undefined : json['js_modal_lightbox_gamepad'],
        'jsModalLightboxGamepadRepeat': json['js_modal_lightbox_gamepad_repeat'] == null ? undefined : json['js_modal_lightbox_gamepad_repeat'],
        'showProgressInTitle': json['show_progress_in_title'] == null ? undefined : json['show_progress_in_title'],
        'samplersInDropdown': json['samplers_in_dropdown'] == null ? undefined : json['samplers_in_dropdown'],
        'dimensionsAndBatchTogether': json['dimensions_and_batch_together'] == null ? undefined : json['dimensions_and_batch_together'],
        'keyeditPrecisionAttention': json['keyedit_precision_attention'] == null ? undefined : json['keyedit_precision_attention'],
        'keyeditPrecisionExtra': json['keyedit_precision_extra'] == null ? undefined : json['keyedit_precision_extra'],
        'keyeditDelimiters': json['keyedit_delimiters'] == null ? undefined : json['keyedit_delimiters'],
        'keyeditDelimitersWhitespace': json['keyedit_delimiters_whitespace'] == null ? undefined : json['keyedit_delimiters_whitespace'],
        'keyeditMove': json['keyedit_move'] == null ? undefined : json['keyedit_move'],
        'quicksettingsList': json['quicksettings_list'] == null ? undefined : json['quicksettings_list'],
        'uiTabOrder': json['ui_tab_order'] == null ? undefined : json['ui_tab_order'],
        'hiddenTabs': json['hidden_tabs'] == null ? undefined : json['hidden_tabs'],
        'uiReorderList': json['ui_reorder_list'] == null ? undefined : json['ui_reorder_list'],
        'sdCheckpointDropdownUseShort': json['sd_checkpoint_dropdown_use_short'] == null ? undefined : json['sd_checkpoint_dropdown_use_short'],
        'hiresFixShowSampler': json['hires_fix_show_sampler'] == null ? undefined : json['hires_fix_show_sampler'],
        'hiresFixShowPrompts': json['hires_fix_show_prompts'] == null ? undefined : json['hires_fix_show_prompts'],
        'disableTokenCounters': json['disable_token_counters'] == null ? undefined : json['disable_token_counters'],
        'addModelHashToInfo': json['add_model_hash_to_info'] == null ? undefined : json['add_model_hash_to_info'],
        'addModelNameToInfo': json['add_model_name_to_info'] == null ? undefined : json['add_model_name_to_info'],
        'addUserNameToInfo': json['add_user_name_to_info'] == null ? undefined : json['add_user_name_to_info'],
        'addVersionToInfotext': json['add_version_to_infotext'] == null ? undefined : json['add_version_to_infotext'],
        'disableWeightsAutoSwap': json['disable_weights_auto_swap'] == null ? undefined : json['disable_weights_auto_swap'],
        'infotextStyles': json['infotext_styles'] == null ? undefined : json['infotext_styles'],
        'showProgressbar': json['show_progressbar'] == null ? undefined : json['show_progressbar'],
        'livePreviewsEnable': json['live_previews_enable'] == null ? undefined : json['live_previews_enable'],
        'livePreviewsImageFormat': json['live_previews_image_format'] == null ? undefined : json['live_previews_image_format'],
        'showProgressGrid': json['show_progress_grid'] == null ? undefined : json['show_progress_grid'],
        'showProgressEveryNSteps': json['show_progress_every_n_steps'] == null ? undefined : json['show_progress_every_n_steps'],
        'showProgressType': json['show_progress_type'] == null ? undefined : json['show_progress_type'],
        'livePreviewAllowLowvramFull': json['live_preview_allow_lowvram_full'] == null ? undefined : json['live_preview_allow_lowvram_full'],
        'livePreviewContent': json['live_preview_content'] == null ? undefined : json['live_preview_content'],
        'livePreviewRefreshPeriod': json['live_preview_refresh_period'] == null ? undefined : json['live_preview_refresh_period'],
        'livePreviewFastInterrupt': json['live_preview_fast_interrupt'] == null ? undefined : json['live_preview_fast_interrupt'],
        'hideSamplers': json['hide_samplers'] == null ? undefined : json['hide_samplers'],
        'etaDdim': json['eta_ddim'] == null ? undefined : json['eta_ddim'],
        'etaAncestral': json['eta_ancestral'] == null ? undefined : json['eta_ancestral'],
        'ddimDiscretize': json['ddim_discretize'] == null ? undefined : json['ddim_discretize'],
        'sChurn': json['s_churn'] == null ? undefined : json['s_churn'],
        'sTmin': json['s_tmin'] == null ? undefined : json['s_tmin'],
        'sTmax': json['s_tmax'] == null ? undefined : json['s_tmax'],
        'sNoise': json['s_noise'] == null ? undefined : json['s_noise'],
        'kSchedType': json['k_sched_type'] == null ? undefined : json['k_sched_type'],
        'sigmaMin': json['sigma_min'] == null ? undefined : json['sigma_min'],
        'sigmaMax': json['sigma_max'] == null ? undefined : json['sigma_max'],
        'rho': json['rho'] == null ? undefined : json['rho'],
        'etaNoiseSeedDelta': json['eta_noise_seed_delta'] == null ? undefined : json['eta_noise_seed_delta'],
        'alwaysDiscardNextToLastSigma': json['always_discard_next_to_last_sigma'] == null ? undefined : json['always_discard_next_to_last_sigma'],
        'sgmNoiseMultiplier': json['sgm_noise_multiplier'] == null ? undefined : json['sgm_noise_multiplier'],
        'uniPcVariant': json['uni_pc_variant'] == null ? undefined : json['uni_pc_variant'],
        'uniPcSkipType': json['uni_pc_skip_type'] == null ? undefined : json['uni_pc_skip_type'],
        'uniPcOrder': json['uni_pc_order'] == null ? undefined : json['uni_pc_order'],
        'uniPcLowerOrderFinal': json['uni_pc_lower_order_final'] == null ? undefined : json['uni_pc_lower_order_final'],
        'postprocessingEnableInMainUi': json['postprocessing_enable_in_main_ui'] == null ? undefined : json['postprocessing_enable_in_main_ui'],
        'postprocessingOperationOrder': json['postprocessing_operation_order'] == null ? undefined : json['postprocessing_operation_order'],
        'upscalingMaxImagesInCache': json['upscaling_max_images_in_cache'] == null ? undefined : json['upscaling_max_images_in_cache'],
        'disabledExtensions': json['disabled_extensions'] == null ? undefined : json['disabled_extensions'],
        'disableAllExtensions': json['disable_all_extensions'] == null ? undefined : json['disable_all_extensions'],
        'restoreConfigStateFile': json['restore_config_state_file'] == null ? undefined : json['restore_config_state_file'],
        'sdCheckpointHash': json['sd_checkpoint_hash'] == null ? undefined : json['sd_checkpoint_hash'],
        'hotshotXlModelPath': json['hotshot_xl_model_path'] == null ? undefined : json['hotshot_xl_model_path'],
    };
}

export function OptionsToJSON(json: any): Options {
    return OptionsToJSONTyped(json, false);
}

export function OptionsToJSONTyped(value?: Options | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'samples_save': value['samplesSave'],
        'samples_format': value['samplesFormat'],
        'samples_filename_pattern': value['samplesFilenamePattern'],
        'save_images_add_number': value['saveImagesAddNumber'],
        'save_images_replace_action': value['saveImagesReplaceAction'],
        'grid_save': value['gridSave'],
        'grid_format': value['gridFormat'],
        'grid_extended_filename': value['gridExtendedFilename'],
        'grid_only_if_multiple': value['gridOnlyIfMultiple'],
        'grid_prevent_empty_spots': value['gridPreventEmptySpots'],
        'grid_zip_filename_pattern': value['gridZipFilenamePattern'],
        'n_rows': value['nRows'],
        'font': value['font'],
        'grid_text_active_color': value['gridTextActiveColor'],
        'grid_text_inactive_color': value['gridTextInactiveColor'],
        'grid_background_color': value['gridBackgroundColor'],
        'enable_pnginfo': value['enablePnginfo'],
        'save_txt': value['saveTxt'],
        'save_images_before_face_restoration': value['saveImagesBeforeFaceRestoration'],
        'save_images_before_highres_fix': value['saveImagesBeforeHighresFix'],
        'save_images_before_color_correction': value['saveImagesBeforeColorCorrection'],
        'save_mask': value['saveMask'],
        'save_mask_composite': value['saveMaskComposite'],
        'jpeg_quality': value['jpegQuality'],
        'webp_lossless': value['webpLossless'],
        'export_for_4chan': value['exportFor4chan'],
        'img_downscale_threshold': value['imgDownscaleThreshold'],
        'target_side_length': value['targetSideLength'],
        'img_max_size_mp': value['imgMaxSizeMp'],
        'use_original_name_batch': value['useOriginalNameBatch'],
        'use_upscaler_name_as_suffix': value['useUpscalerNameAsSuffix'],
        'save_selected_only': value['saveSelectedOnly'],
        'save_init_img': value['saveInitImg'],
        'temp_dir': value['tempDir'],
        'clean_temp_dir_at_start': value['cleanTempDirAtStart'],
        'save_incomplete_images': value['saveIncompleteImages'],
        'notification_audio': value['notificationAudio'],
        'outdir_samples': value['outdirSamples'],
        'outdir_txt2img_samples': value['outdirTxt2imgSamples'],
        'outdir_img2img_samples': value['outdirImg2imgSamples'],
        'outdir_extras_samples': value['outdirExtrasSamples'],
        'outdir_grids': value['outdirGrids'],
        'outdir_txt2img_grids': value['outdirTxt2imgGrids'],
        'outdir_img2img_grids': value['outdirImg2imgGrids'],
        'outdir_save': value['outdirSave'],
        'outdir_init_images': value['outdirInitImages'],
        'save_to_dirs': value['saveToDirs'],
        'grid_save_to_dirs': value['gridSaveToDirs'],
        'use_save_to_dirs_for_ui': value['useSaveToDirsForUi'],
        'directories_filename_pattern': value['directoriesFilenamePattern'],
        'directories_max_prompt_words': value['directoriesMaxPromptWords'],
        'ESRGAN_tile': value['eSRGANTile'],
        'ESRGAN_tile_overlap': value['eSRGANTileOverlap'],
        'realesrgan_enabled_models': value['realesrganEnabledModels'],
        'upscaler_for_img2img': value['upscalerForImg2img'],
        'face_restoration': value['faceRestoration'],
        'face_restoration_model': value['faceRestorationModel'],
        'code_former_weight': value['codeFormerWeight'],
        'face_restoration_unload': value['faceRestorationUnload'],
        'auto_launch_browser': value['autoLaunchBrowser'],
        'enable_console_prompts': value['enableConsolePrompts'],
        'show_warnings': value['showWarnings'],
        'show_gradio_deprecation_warnings': value['showGradioDeprecationWarnings'],
        'memmon_poll_rate': value['memmonPollRate'],
        'samples_log_stdout': value['samplesLogStdout'],
        'multiple_tqdm': value['multipleTqdm'],
        'print_hypernet_extra': value['printHypernetExtra'],
        'list_hidden_files': value['listHiddenFiles'],
        'disable_mmap_load_safetensors': value['disableMmapLoadSafetensors'],
        'hide_ldm_prints': value['hideLdmPrints'],
        'dump_stacks_on_signal': value['dumpStacksOnSignal'],
        'api_enable_requests': value['apiEnableRequests'],
        'api_forbid_local_requests': value['apiForbidLocalRequests'],
        'api_useragent': value['apiUseragent'],
        'unload_models_when_training': value['unloadModelsWhenTraining'],
        'pin_memory': value['pinMemory'],
        'save_optimizer_state': value['saveOptimizerState'],
        'save_training_settings_to_txt': value['saveTrainingSettingsToTxt'],
        'dataset_filename_word_regex': value['datasetFilenameWordRegex'],
        'dataset_filename_join_string': value['datasetFilenameJoinString'],
        'training_image_repeats_per_epoch': value['trainingImageRepeatsPerEpoch'],
        'training_write_csv_every': value['trainingWriteCsvEvery'],
        'training_xattention_optimizations': value['trainingXattentionOptimizations'],
        'training_enable_tensorboard': value['trainingEnableTensorboard'],
        'training_tensorboard_save_images': value['trainingTensorboardSaveImages'],
        'training_tensorboard_flush_every': value['trainingTensorboardFlushEvery'],
        'sd_model_checkpoint': value['sdModelCheckpoint'],
        'sd_checkpoints_limit': value['sdCheckpointsLimit'],
        'sd_checkpoints_keep_in_cpu': value['sdCheckpointsKeepInCpu'],
        'sd_checkpoint_cache': value['sdCheckpointCache'],
        'sd_unet': value['sdUnet'],
        'enable_quantization': value['enableQuantization'],
        'enable_emphasis': value['enableEmphasis'],
        'enable_batch_seeds': value['enableBatchSeeds'],
        'comma_padding_backtrack': value['commaPaddingBacktrack'],
        'CLIP_stop_at_last_layers': value['cLIPStopAtLastLayers'],
        'upcast_attn': value['upcastAttn'],
        'randn_source': value['randnSource'],
        'tiling': value['tiling'],
        'hires_fix_refiner_pass': value['hiresFixRefinerPass'],
        'sdxl_crop_top': value['sdxlCropTop'],
        'sdxl_crop_left': value['sdxlCropLeft'],
        'sdxl_refiner_low_aesthetic_score': value['sdxlRefinerLowAestheticScore'],
        'sdxl_refiner_high_aesthetic_score': value['sdxlRefinerHighAestheticScore'],
        'sd_vae_explanation': value['sdVaeExplanation'],
        'sd_vae_checkpoint_cache': value['sdVaeCheckpointCache'],
        'sd_vae': value['sdVae'],
        'sd_vae_overrides_per_model_preferences': value['sdVaeOverridesPerModelPreferences'],
        'auto_vae_precision': value['autoVaePrecision'],
        'sd_vae_encode_method': value['sdVaeEncodeMethod'],
        'sd_vae_decode_method': value['sdVaeDecodeMethod'],
        'inpainting_mask_weight': value['inpaintingMaskWeight'],
        'initial_noise_multiplier': value['initialNoiseMultiplier'],
        'img2img_extra_noise': value['img2imgExtraNoise'],
        'img2img_color_correction': value['img2imgColorCorrection'],
        'img2img_fix_steps': value['img2imgFixSteps'],
        'img2img_background_color': value['img2imgBackgroundColor'],
        'img2img_editor_height': value['img2imgEditorHeight'],
        'img2img_sketch_default_brush_color': value['img2imgSketchDefaultBrushColor'],
        'img2img_inpaint_mask_brush_color': value['img2imgInpaintMaskBrushColor'],
        'img2img_inpaint_sketch_default_brush_color': value['img2imgInpaintSketchDefaultBrushColor'],
        'return_mask': value['returnMask'],
        'return_mask_composite': value['returnMaskComposite'],
        'cross_attention_optimization': value['crossAttentionOptimization'],
        's_min_uncond': value['sMinUncond'],
        'token_merging_ratio': value['tokenMergingRatio'],
        'token_merging_ratio_img2img': value['tokenMergingRatioImg2img'],
        'token_merging_ratio_hr': value['tokenMergingRatioHr'],
        'pad_cond_uncond': value['padCondUncond'],
        'persistent_cond_cache': value['persistentCondCache'],
        'batch_cond_uncond': value['batchCondUncond'],
        'use_old_emphasis_implementation': value['useOldEmphasisImplementation'],
        'use_old_karras_scheduler_sigmas': value['useOldKarrasSchedulerSigmas'],
        'no_dpmpp_sde_batch_determinism': value['noDpmppSdeBatchDeterminism'],
        'use_old_hires_fix_width_height': value['useOldHiresFixWidthHeight'],
        'dont_fix_second_order_samplers_schedule': value['dontFixSecondOrderSamplersSchedule'],
        'hires_fix_use_firstpass_conds': value['hiresFixUseFirstpassConds'],
        'use_old_scheduling': value['useOldScheduling'],
        'interrogate_keep_models_in_memory': value['interrogateKeepModelsInMemory'],
        'interrogate_return_ranks': value['interrogateReturnRanks'],
        'interrogate_clip_num_beams': value['interrogateClipNumBeams'],
        'interrogate_clip_min_length': value['interrogateClipMinLength'],
        'interrogate_clip_max_length': value['interrogateClipMaxLength'],
        'interrogate_clip_dict_limit': value['interrogateClipDictLimit'],
        'interrogate_clip_skip_categories': value['interrogateClipSkipCategories'],
        'interrogate_deepbooru_score_threshold': value['interrogateDeepbooruScoreThreshold'],
        'deepbooru_sort_alpha': value['deepbooruSortAlpha'],
        'deepbooru_use_spaces': value['deepbooruUseSpaces'],
        'deepbooru_escape': value['deepbooruEscape'],
        'deepbooru_filter_tags': value['deepbooruFilterTags'],
        'extra_networks_show_hidden_directories': value['extraNetworksShowHiddenDirectories'],
        'extra_networks_hidden_models': value['extraNetworksHiddenModels'],
        'extra_networks_default_multiplier': value['extraNetworksDefaultMultiplier'],
        'extra_networks_card_width': value['extraNetworksCardWidth'],
        'extra_networks_card_height': value['extraNetworksCardHeight'],
        'extra_networks_card_text_scale': value['extraNetworksCardTextScale'],
        'extra_networks_card_show_desc': value['extraNetworksCardShowDesc'],
        'extra_networks_add_text_separator': value['extraNetworksAddTextSeparator'],
        'ui_extra_networks_tab_reorder': value['uiExtraNetworksTabReorder'],
        'textual_inversion_print_at_load': value['textualInversionPrintAtLoad'],
        'textual_inversion_add_hashes_to_infotext': value['textualInversionAddHashesToInfotext'],
        'sd_hypernetwork': value['sdHypernetwork'],
        'localization': value['localization'],
        'gradio_theme': value['gradioTheme'],
        'gradio_themes_cache': value['gradioThemesCache'],
        'gallery_height': value['galleryHeight'],
        'return_grid': value['returnGrid'],
        'do_not_show_images': value['doNotShowImages'],
        'send_seed': value['sendSeed'],
        'send_size': value['sendSize'],
        'js_modal_lightbox': value['jsModalLightbox'],
        'js_modal_lightbox_initially_zoomed': value['jsModalLightboxInitiallyZoomed'],
        'js_modal_lightbox_gamepad': value['jsModalLightboxGamepad'],
        'js_modal_lightbox_gamepad_repeat': value['jsModalLightboxGamepadRepeat'],
        'show_progress_in_title': value['showProgressInTitle'],
        'samplers_in_dropdown': value['samplersInDropdown'],
        'dimensions_and_batch_together': value['dimensionsAndBatchTogether'],
        'keyedit_precision_attention': value['keyeditPrecisionAttention'],
        'keyedit_precision_extra': value['keyeditPrecisionExtra'],
        'keyedit_delimiters': value['keyeditDelimiters'],
        'keyedit_delimiters_whitespace': value['keyeditDelimitersWhitespace'],
        'keyedit_move': value['keyeditMove'],
        'quicksettings_list': value['quicksettingsList'],
        'ui_tab_order': value['uiTabOrder'],
        'hidden_tabs': value['hiddenTabs'],
        'ui_reorder_list': value['uiReorderList'],
        'sd_checkpoint_dropdown_use_short': value['sdCheckpointDropdownUseShort'],
        'hires_fix_show_sampler': value['hiresFixShowSampler'],
        'hires_fix_show_prompts': value['hiresFixShowPrompts'],
        'disable_token_counters': value['disableTokenCounters'],
        'add_model_hash_to_info': value['addModelHashToInfo'],
        'add_model_name_to_info': value['addModelNameToInfo'],
        'add_user_name_to_info': value['addUserNameToInfo'],
        'add_version_to_infotext': value['addVersionToInfotext'],
        'disable_weights_auto_swap': value['disableWeightsAutoSwap'],
        'infotext_styles': value['infotextStyles'],
        'show_progressbar': value['showProgressbar'],
        'live_previews_enable': value['livePreviewsEnable'],
        'live_previews_image_format': value['livePreviewsImageFormat'],
        'show_progress_grid': value['showProgressGrid'],
        'show_progress_every_n_steps': value['showProgressEveryNSteps'],
        'show_progress_type': value['showProgressType'],
        'live_preview_allow_lowvram_full': value['livePreviewAllowLowvramFull'],
        'live_preview_content': value['livePreviewContent'],
        'live_preview_refresh_period': value['livePreviewRefreshPeriod'],
        'live_preview_fast_interrupt': value['livePreviewFastInterrupt'],
        'hide_samplers': value['hideSamplers'],
        'eta_ddim': value['etaDdim'],
        'eta_ancestral': value['etaAncestral'],
        'ddim_discretize': value['ddimDiscretize'],
        's_churn': value['sChurn'],
        's_tmin': value['sTmin'],
        's_tmax': value['sTmax'],
        's_noise': value['sNoise'],
        'k_sched_type': value['kSchedType'],
        'sigma_min': value['sigmaMin'],
        'sigma_max': value['sigmaMax'],
        'rho': value['rho'],
        'eta_noise_seed_delta': value['etaNoiseSeedDelta'],
        'always_discard_next_to_last_sigma': value['alwaysDiscardNextToLastSigma'],
        'sgm_noise_multiplier': value['sgmNoiseMultiplier'],
        'uni_pc_variant': value['uniPcVariant'],
        'uni_pc_skip_type': value['uniPcSkipType'],
        'uni_pc_order': value['uniPcOrder'],
        'uni_pc_lower_order_final': value['uniPcLowerOrderFinal'],
        'postprocessing_enable_in_main_ui': value['postprocessingEnableInMainUi'],
        'postprocessing_operation_order': value['postprocessingOperationOrder'],
        'upscaling_max_images_in_cache': value['upscalingMaxImagesInCache'],
        'disabled_extensions': value['disabledExtensions'],
        'disable_all_extensions': value['disableAllExtensions'],
        'restore_config_state_file': value['restoreConfigStateFile'],
        'sd_checkpoint_hash': value['sdCheckpointHash'],
        'hotshot_xl_model_path': value['hotshotXlModelPath'],
    };
}

